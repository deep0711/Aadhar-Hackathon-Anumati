{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"delayLongPress\", \"delayPressIn\", \"delayPressOut\", \"disabled\", \"hitSlop\", \"pressRetentionOffset\", \"children\", \"rippleContainerBorderRadius\", \"testID\", \"nativeID\", \"accessible\", \"accessibilityLabel\", \"onLayout\", \"pressColor\"];\nvar _jsxFileName = \"D:\\\\PROJECTS\\\\Aadhar-Hackathon-Anumati\\\\Anumati-client\\\\node_modules\\\\react-native-material-ripple\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { styles, radius } from \"./styles.js\";\n\nvar Ripple = function (_PureComponent) {\n  _inherits(Ripple, _PureComponent);\n\n  var _super = _createSuper(Ripple);\n\n  function Ripple(props) {\n    var _this;\n\n    _classCallCheck(this, Ripple);\n\n    _this = _super.call(this, props);\n    _this.onLayout = _this.onLayout.bind(_assertThisInitialized(_this));\n    _this.onPress = _this.onPress.bind(_assertThisInitialized(_this));\n    _this.onPressIn = _this.onPressIn.bind(_assertThisInitialized(_this));\n    _this.onPressOut = _this.onPressOut.bind(_assertThisInitialized(_this));\n    _this.onLongPress = _this.onLongPress.bind(_assertThisInitialized(_this));\n    _this.onAnimationEnd = _this.onAnimationEnd.bind(_assertThisInitialized(_this));\n    _this.renderRipple = _this.renderRipple.bind(_assertThisInitialized(_this));\n    _this.unique = 0;\n    _this.mounted = false;\n    _this.state = {\n      width: 0,\n      height: 0,\n      ripples: [],\n      pressed: false\n    };\n    return _this;\n  }\n\n  _createClass(Ripple, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.mounted = true;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.mounted = false;\n    }\n  }, {\n    key: \"onLayout\",\n    value: function onLayout(event) {\n      var _event$nativeEvent$la = event.nativeEvent.layout,\n          width = _event$nativeEvent$la.width,\n          height = _event$nativeEvent$la.height;\n      var onLayout = this.props.onLayout;\n\n      if ('function' === typeof onLayout) {\n        onLayout(event);\n      }\n\n      this.setState({\n        width: width,\n        height: height\n      });\n    }\n  }, {\n    key: \"onPress\",\n    value: function onPress(event) {\n      var onPress = this.props.onPress;\n\n      if ('function' === typeof onPressOut) {\n        onPress(event);\n      }\n    }\n  }, {\n    key: \"onLongPress\",\n    value: function onLongPress(event) {\n      var onLongPress = this.props.onLongPress;\n\n      if ('function' === typeof onLongPress) {\n        onLongPress(event);\n      }\n    }\n  }, {\n    key: \"onPressIn\",\n    value: function onPressIn(event) {\n      var onPressIn = this.props.onPressIn;\n\n      if ('function' === typeof onPressIn) {\n        onPressIn(event);\n      }\n\n      this.setState({\n        pressed: true\n      });\n    }\n  }, {\n    key: \"onPressOut\",\n    value: function onPressOut(event) {\n      var ripples = this.state.ripples;\n      var _this$props = this.props,\n          onPressOut = _this$props.onPressOut,\n          rippleSequential = _this$props.rippleSequential;\n\n      if (!rippleSequential || !ripples.length) {\n        if ('function' === typeof onPress) {\n          requestAnimationFrame(function () {\n            return onPress(event);\n          });\n        }\n\n        this.startRipple(event);\n      }\n\n      this.setState({\n        pressed: false\n      });\n    }\n  }, {\n    key: \"onAnimationEnd\",\n    value: function onAnimationEnd() {\n      if (this.mounted) {\n        this.setState(function (_ref) {\n          var ripples = _ref.ripples;\n          return {\n            ripples: ripples.slice(1)\n          };\n        });\n      }\n    }\n  }, {\n    key: \"startRipple\",\n    value: function startRipple(event) {\n      var _this$state = this.state,\n          width = _this$state.width,\n          height = _this$state.height;\n      var _this$props2 = this.props,\n          rippleDuration = _this$props2.rippleDuration,\n          rippleCentered = _this$props2.rippleCentered,\n          rippleSize = _this$props2.rippleSize,\n          onRippleAnimation = _this$props2.onRippleAnimation;\n      var w2 = 0.5 * width;\n      var h2 = 0.5 * height;\n\n      var _ref2 = rippleCentered ? {\n        locationX: w2,\n        locationY: h2\n      } : event.nativeEvent,\n          locationX = _ref2.locationX,\n          locationY = _ref2.locationY;\n\n      var offsetX = Math.abs(w2 - locationX);\n      var offsetY = Math.abs(h2 - locationY);\n      var R = rippleSize > 0 ? 0.5 * rippleSize : Math.sqrt(Math.pow(w2 + offsetX, 2) + Math.pow(h2 + offsetY, 2));\n      var ripple = {\n        unique: this.unique++,\n        progress: new Animated.Value(0),\n        locationX: locationX,\n        locationY: locationY,\n        R: R\n      };\n      var animation = Animated.timing(ripple.progress, {\n        toValue: 1,\n        easing: Easing.out(Easing.ease),\n        duration: rippleDuration,\n        useNativeDriver: true\n      });\n      onRippleAnimation(animation, this.onAnimationEnd);\n      this.setState(function (_ref3) {\n        var ripples = _ref3.ripples;\n        return {\n          ripples: ripples.concat(ripple)\n        };\n      });\n    }\n  }, {\n    key: \"renderRipple\",\n    value: function renderRipple(_ref4) {\n      var unique = _ref4.unique,\n          progress = _ref4.progress,\n          locationX = _ref4.locationX,\n          locationY = _ref4.locationY,\n          R = _ref4.R;\n      var _this$props3 = this.props,\n          rippleColor = _this$props3.rippleColor,\n          rippleOpacity = _this$props3.rippleOpacity,\n          rippleFades = _this$props3.rippleFades;\n      var rippleStyle = {\n        top: locationY - radius,\n        left: locationX - radius,\n        backgroundColor: rippleColor,\n        transform: [{\n          scale: progress.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0.5 / radius, R / radius]\n          })\n        }],\n        opacity: rippleFades ? progress.interpolate({\n          inputRange: [0, 1],\n          outputRange: [rippleOpacity, 0]\n        }) : rippleOpacity\n      };\n      return React.createElement(Animated.View, {\n        style: [styles.ripple, rippleStyle],\n        key: unique,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          ripples = _this$state2.ripples,\n          pressed = _this$state2.pressed;\n      var onPress = this.onPress,\n          onPressIn = this.onPressIn,\n          onPressOut = this.onPressOut,\n          onLongPress = this.onLongPress,\n          onLayout = this.onLayout;\n\n      var _this$props4 = this.props,\n          delayLongPress = _this$props4.delayLongPress,\n          delayPressIn = _this$props4.delayPressIn,\n          delayPressOut = _this$props4.delayPressOut,\n          disabled = _this$props4.disabled,\n          hitSlop = _this$props4.hitSlop,\n          pressRetentionOffset = _this$props4.pressRetentionOffset,\n          children = _this$props4.children,\n          rippleContainerBorderRadius = _this$props4.rippleContainerBorderRadius,\n          testID = _this$props4.testID,\n          nativeID = _this$props4.nativeID,\n          accessible = _this$props4.accessible,\n          accessibilityLabel = _this$props4.accessibilityLabel,\n          __ignored__ = _this$props4.onLayout,\n          pressColor = _this$props4.pressColor,\n          props = _objectWithoutProperties(_this$props4, _excluded);\n\n      var touchableProps = {\n        delayLongPress: delayLongPress,\n        delayPressIn: delayPressIn,\n        delayPressOut: delayPressOut,\n        disabled: disabled,\n        hitSlop: hitSlop,\n        pressRetentionOffset: pressRetentionOffset,\n        onPress: onPress,\n        onPressIn: onPressIn,\n        testID: testID,\n        nativeID: nativeID,\n        accessible: accessible,\n        accessibilityLabel: accessibilityLabel,\n        onPressOut: onPressOut,\n        onLongPress: props.onLongPress ? onLongPress : undefined,\n        onLayout: onLayout\n      };\n      var containerStyle = {\n        borderRadius: rippleContainerBorderRadius\n      };\n      return React.createElement(TouchableWithoutFeedback, _extends({}, touchableProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }\n      }), React.createElement(Animated.View, _extends({}, props, {\n        pointerEvents: \"box-only\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 17\n        }\n      }), children, React.createElement(View, {\n        style: [styles.container, containerStyle, pressed ? {\n          backgroundColor: pressColor,\n          opacity: 0.4\n        } : {}],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }\n      }, ripples.map(this.renderRipple))));\n    }\n  }]);\n\n  return Ripple;\n}(PureComponent);\n\nRipple.defaultProps = _objectSpread(_objectSpread({}, TouchableWithoutFeedback.defaultProps), {}, {\n  pressColor: '#e8e8e8',\n  rippleColor: 'rgb(0, 0, 0)',\n  rippleOpacity: 0.30,\n  rippleDuration: 450,\n  rippleSize: 250,\n  rippleContainerBorderRadius: 0,\n  rippleCentered: false,\n  rippleSequential: false,\n  rippleFades: true,\n  disabled: false,\n  onRippleAnimation: function onRippleAnimation(animation, callback) {\n    return animation.start(callback);\n  }\n});\nRipple.propTypes = _objectSpread(_objectSpread(_objectSpread({}, Animated.View.propTypes), TouchableWithoutFeedback.propTypes), {}, {\n  pressColor: PropTypes.string,\n  rippleColor: PropTypes.string,\n  rippleOpacity: PropTypes.number,\n  rippleDuration: PropTypes.number,\n  rippleSize: PropTypes.number,\n  rippleContainerBorderRadius: PropTypes.number,\n  rippleCentered: PropTypes.bool,\n  rippleSequential: PropTypes.bool,\n  rippleFades: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onRippleAnimation: PropTypes.func\n});\nexport { Ripple as default };","map":{"version":3,"sources":["D:/PROJECTS/Aadhar-Hackathon-Anumati/Anumati-client/node_modules/react-native-material-ripple/index.js"],"names":["PropTypes","React","PureComponent","styles","radius","Ripple","props","onLayout","bind","onPress","onPressIn","onPressOut","onLongPress","onAnimationEnd","renderRipple","unique","mounted","state","width","height","ripples","pressed","event","nativeEvent","layout","setState","rippleSequential","length","requestAnimationFrame","startRipple","slice","rippleDuration","rippleCentered","rippleSize","onRippleAnimation","w2","h2","locationX","locationY","offsetX","Math","abs","offsetY","R","sqrt","pow","ripple","progress","Animated","Value","animation","timing","toValue","easing","Easing","out","ease","duration","useNativeDriver","concat","rippleColor","rippleOpacity","rippleFades","rippleStyle","top","left","backgroundColor","transform","scale","interpolate","inputRange","outputRange","opacity","delayLongPress","delayPressIn","delayPressOut","disabled","hitSlop","pressRetentionOffset","children","rippleContainerBorderRadius","testID","nativeID","accessible","accessibilityLabel","__ignored__","pressColor","touchableProps","undefined","containerStyle","borderRadius","container","map","defaultProps","TouchableWithoutFeedback","callback","start","propTypes","View","string","number","bool","func"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, {PureComponent} from 'react';\nimport {View, Animated, Easing, TouchableWithoutFeedback} from 'react-native';\nimport {styles, radius} from './styles.js';\n\nexport default class Ripple extends PureComponent {\n    static defaultProps = {\n        ...TouchableWithoutFeedback.defaultProps,\n\n        pressColor: '#e8e8e8',\n        rippleColor: 'rgb(0, 0, 0)',\n        rippleOpacity: 0.30,\n        rippleDuration: 450,\n        rippleSize: 250,\n        rippleContainerBorderRadius: 0,\n        rippleCentered: false,\n        rippleSequential: false,\n        rippleFades: true,\n        disabled: false,\n\n        onRippleAnimation: (animation, callback) => animation.start(callback),\n    };\n\n    static propTypes = {\n        ...Animated.View.propTypes,\n        ...TouchableWithoutFeedback.propTypes,\n\n        pressColor: PropTypes.string,\n        rippleColor: PropTypes.string,\n        rippleOpacity: PropTypes.number,\n        rippleDuration: PropTypes.number,\n        rippleSize: PropTypes.number,\n        rippleContainerBorderRadius: PropTypes.number,\n        rippleCentered: PropTypes.bool,\n        rippleSequential: PropTypes.bool,\n        rippleFades: PropTypes.bool,\n        disabled: PropTypes.bool,\n\n        onRippleAnimation: PropTypes.func,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.onLayout = this.onLayout.bind(this);\n        this.onPress = this.onPress.bind(this);\n        this.onPressIn = this.onPressIn.bind(this);\n        this.onPressOut = this.onPressOut.bind(this);\n        this.onLongPress = this.onLongPress.bind(this);\n        this.onAnimationEnd = this.onAnimationEnd.bind(this);\n\n        this.renderRipple = this.renderRipple.bind(this);\n\n        this.unique = 0;\n        this.mounted = false;\n\n        this.state = {\n            width: 0,\n            height: 0,\n            ripples: [],\n            pressed: false,\n        };\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n    }\n\n    onLayout(event) {\n        let {width, height} = event.nativeEvent.layout;\n        let {onLayout} = this.props;\n\n        if ('function' === typeof onLayout) {\n            onLayout(event);\n        }\n\n        this.setState({width, height});\n    }\n\n    onPress(event) {\n        let {onPress} = this.props;\n\n        if ('function' === typeof onPressOut) {\n            onPress(event);\n        }\n    }\n\n    onLongPress(event) {\n        let {onLongPress} = this.props;\n\n        if ('function' === typeof onLongPress) {\n            onLongPress(event);\n        }\n    }\n\n    onPressIn(event) {\n        let {onPressIn} = this.props;\n\n        if ('function' === typeof onPressIn) {\n            onPressIn(event);\n        }\n\n        this.setState({ pressed: true });\n    }\n\n    onPressOut(event) {\n        let {ripples} = this.state;\n        let {onPressOut, rippleSequential} = this.props;\n\n        if (!rippleSequential || !ripples.length) {\n            if ('function' === typeof onPress) {\n                requestAnimationFrame(() => onPress(event));\n            }\n\n            this.startRipple(event);\n        }\n\n        this.setState({ pressed: false });\n    }\n\n    onAnimationEnd() {\n        if (this.mounted) {\n            this.setState(({ripples}) => ({ripples: ripples.slice(1)}));\n        }\n    }\n\n    startRipple(event) {\n        let {width, height} = this.state;\n        let {\n            rippleDuration,\n            rippleCentered,\n            rippleSize,\n            onRippleAnimation,\n        } = this.props;\n\n        let w2 = 0.5 * width;\n        let h2 = 0.5 * height;\n\n        let {locationX, locationY} = rippleCentered ?\n            {locationX: w2, locationY: h2} :\n            event.nativeEvent;\n\n        let offsetX = Math.abs(w2 - locationX);\n        let offsetY = Math.abs(h2 - locationY);\n\n        let R = rippleSize > 0 ?\n            0.5 * rippleSize :\n            Math.sqrt(Math.pow(w2 + offsetX, 2) + Math.pow(h2 + offsetY, 2));\n\n        let ripple = {\n            unique: this.unique++,\n            progress: new Animated.Value(0),\n            locationX,\n            locationY,\n            R,\n        };\n\n        let animation = Animated\n            .timing(ripple.progress, {\n                toValue: 1,\n                easing: Easing.out(Easing.ease),\n                duration: rippleDuration,\n                useNativeDriver: true,\n            });\n\n        onRippleAnimation(animation, this.onAnimationEnd);\n\n        this.setState(({ripples}) => ({ripples: ripples.concat(ripple)}));\n    }\n\n    renderRipple({unique, progress, locationX, locationY, R}) {\n        let {rippleColor, rippleOpacity, rippleFades} = this.props;\n\n        let rippleStyle = {\n            top: locationY - radius,\n            left: locationX - radius,\n            backgroundColor: rippleColor,\n\n            transform: [{\n                scale: progress.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [0.5 / radius, R / radius],\n                }),\n            }],\n\n            opacity: rippleFades ?\n                progress.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [rippleOpacity, 0],\n                }) :\n                rippleOpacity,\n        };\n\n        return (\n            <Animated.View style={[styles.ripple, rippleStyle]} key={unique}/>\n        );\n    }\n\n    render() {\n        let {\n            ripples,\n            pressed\n        } = this.state;\n        let {onPress, onPressIn, onPressOut, onLongPress, onLayout} = this;\n\n        let {\n            delayLongPress,\n            delayPressIn,\n            delayPressOut,\n            disabled,\n            hitSlop,\n            pressRetentionOffset,\n            children,\n            rippleContainerBorderRadius,\n            testID,\n            nativeID,\n            accessible,\n            accessibilityLabel,\n            onLayout: __ignored__,\n            pressColor,\n            ...props\n        } = this.props;\n\n        let touchableProps = {\n            delayLongPress,\n            delayPressIn,\n            delayPressOut,\n            disabled,\n            hitSlop,\n            pressRetentionOffset,\n            onPress,\n            onPressIn,\n            testID,\n            nativeID,\n            accessible,\n            accessibilityLabel,\n            onPressOut,\n            onLongPress: props.onLongPress ? onLongPress : undefined,\n            onLayout,\n        };\n\n        let containerStyle = {\n            borderRadius: rippleContainerBorderRadius,\n        };\n\n        return (\n            <TouchableWithoutFeedback {...touchableProps}>\n                <Animated.View {...props} pointerEvents='box-only'>\n                    {children}\n                    <View style={[styles.container, containerStyle, pressed ? { backgroundColor: pressColor, opacity: 0.4 } : {}]}>\n                        {ripples.map(this.renderRipple)}\n                    </View>\n                </Animated.View>\n            </TouchableWithoutFeedback>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}