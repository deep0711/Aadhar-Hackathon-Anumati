{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nvar initialStateLocalStorage = {\n  tokenFound: false\n};\n\nvar LocalStorageReducer = function LocalStorageReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateLocalStorage;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'CHECK_USERTOKEN':\n      try {\n        var value = AsyncStorage.getItem('userToken');\n\n        if (value !== null) {\n          return _objectSpread(_objectSpread({}, state), {}, {\n            tokenFound: true\n          });\n        }\n      } catch (err) {\n        console.log(err);\n      }\n\n      return _objectSpread({}, state);\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\n\nexport default LocalStorageReducer;","map":{"version":3,"sources":["D:/PROJECTS/Aadhar-Hackathon-Anumati/Anumati-client/src/Reducers/localStorageReducer.js"],"names":["AsyncStorage","initialStateLocalStorage","tokenFound","LocalStorageReducer","state","action","type","value","getItem","err","console","log"],"mappings":";;;;;;AAAA,OAAOA,YAAP,MAAyB,2CAAzB;AACA,IAAMC,wBAAwB,GAAG;AAC7BC,EAAAA,UAAU,EAAE;AADiB,CAAjC;;AAIA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAA+C;AAAA,MAA9CC,KAA8C,uEAAtCH,wBAAsC;AAAA,MAAXI,MAAW;;AACvE,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,iBAAL;AACI,UAAI;AACA,YAAMC,KAAK,GAAGP,YAAY,CAACQ,OAAb,CAAqB,WAArB,CAAd;;AACA,YAAGD,KAAK,KAAK,IAAb,EAAmB;AACf,iDACOH,KADP;AAEIF,YAAAA,UAAU,EAAE;AAFhB;AAIH;AACJ,OARD,CAQE,OAAMO,GAAN,EAAW;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;;AACD,+BAAYL,KAAZ;;AACJ;AACI,+BACOA,KADP;AAfR;AAmBH,CApBD;;AAqBA,eAAeD,mBAAf","sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\r\nconst initialStateLocalStorage = {\r\n    tokenFound: false,\r\n}\r\n\r\nconst LocalStorageReducer = (state = initialStateLocalStorage , action) => {\r\n    switch( action.type ) {\r\n        case 'CHECK_USERTOKEN' : \r\n            try {\r\n                const value = AsyncStorage.getItem('userToken');\r\n                if(value !== null) {\r\n                    return {\r\n                        ...state,\r\n                        tokenFound: true\r\n                    }\r\n                } \r\n            } catch(err) {\r\n                console.log(err);\r\n            }\r\n            return { ...state }\r\n        default: \r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n};\r\nexport default LocalStorageReducer;"]},"metadata":{},"sourceType":"module"}