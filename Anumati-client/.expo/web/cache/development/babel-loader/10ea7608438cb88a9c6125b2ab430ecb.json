{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\PROJECTS\\\\Aadhar-Hackathon-Anumati\\\\Anumati-client\\\\node_modules\\\\react-native-awesome-pin\\\\PinScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Vibration from \"react-native-web/dist/exports/Vibration\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport PropTypes from \"prop-types\";\nimport PinInput from \"./PinInput\";\nimport PinKeyboard from \"./PinKeyboard\";\n\nvar PinScreen = function (_Component) {\n  _inherits(PinScreen, _Component);\n\n  var _super = _createSuper(PinScreen);\n\n  function PinScreen(props) {\n    var _this;\n\n    _classCallCheck(this, PinScreen);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      pin: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(PinScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.onRef(this);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.onRef(undefined);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var pin = this.props.pin;\n\n      if (pin !== prevProps.pin) {\n        var filteredPin = pin ? pin.toString() : \"\";\n        this.setState({\n          pin: filteredPin\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          logo = _this$props.logo,\n          tagline = _this$props.tagline,\n          numberOfPins = _this$props.numberOfPins,\n          shakeVibration = _this$props.shakeVibration,\n          logoEnabled = _this$props.logoEnabled,\n          headerBackgroundColor = _this$props.headerBackgroundColor,\n          footerBackgroundColor = _this$props.footerBackgroundColor,\n          containerStyle = _this$props.containerStyle,\n          logoStyle = _this$props.logoStyle,\n          taglineStyle = _this$props.taglineStyle,\n          pinContainerStyle = _this$props.pinContainerStyle,\n          pinStyle = _this$props.pinStyle,\n          pinActiveStyle = _this$props.pinActiveStyle,\n          keyboardStyle = _this$props.keyboardStyle,\n          keyboardDisabledStyle = _this$props.keyboardDisabledStyle,\n          keyStyle = _this$props.keyStyle,\n          keyTextStyle = _this$props.keyTextStyle,\n          keyImageStyle = _this$props.keyImageStyle,\n          errorStyle = _this$props.errorStyle,\n          errorTextStyle = _this$props.errorTextStyle;\n      var pin = this.state.pin;\n      var containerDefaultStyle = styles.containerDefaultStyle,\n          defaultTaglineStyle = styles.defaultTaglineStyle,\n          safeAreaViewHeaderDefaultStyle = styles.safeAreaViewHeaderDefaultStyle,\n          safeAreaViewFooterDefaultStyle = styles.safeAreaViewFooterDefaultStyle;\n      return React.createElement(View, {\n        style: [containerDefaultStyle, containerStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 7\n        }\n      }, React.createElement(SafeAreaView, {\n        style: [safeAreaViewHeaderDefaultStyle, {\n          backgroundColor: headerBackgroundColor\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }\n      }, logoEnabled ? React.createElement(Image, {\n        style: [{\n          flex: 2\n        }, logoStyle],\n        source: logo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }\n      }) : null, React.createElement(Text, {\n        style: [defaultTaglineStyle, taglineStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }\n      }, tagline), React.createElement(PinInput, {\n        onRef: function onRef(ref) {\n          return _this2.pins = ref;\n        },\n        numberOfPins: numberOfPins,\n        numberOfPinsActive: pin.length,\n        vibration: shakeVibration,\n        animationShakeCallback: this.shakeAnimationComplete.bind(this),\n        containerStyle: pinContainerStyle,\n        pinStyle: pinStyle,\n        pinActiveStyle: pinActiveStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }\n      })), React.createElement(SafeAreaView, {\n        style: [safeAreaViewFooterDefaultStyle, {\n          backgroundColor: footerBackgroundColor\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 9\n        }\n      }, React.createElement(PinKeyboard, {\n        onRef: function onRef(ref) {\n          return _this2.keyboard = ref;\n        },\n        keyDown: this.keyDown.bind(this),\n        keyboardStyle: keyboardStyle,\n        keyboardDisabledStyle: keyboardDisabledStyle,\n        keyStyle: keyStyle,\n        keyTextStyle: keyTextStyle,\n        keyImageStyle: keyImageStyle,\n        errorStyle: errorStyle,\n        errorTextStyle: errorTextStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }\n      }), this.props.ItemFooter));\n    }\n  }, {\n    key: \"keyDown\",\n    value: function keyDown(key) {\n      var _this$props2 = this.props,\n          numberOfPins = _this$props2.numberOfPins,\n          keyDown = _this$props2.keyDown;\n      var pin = this.state.pin;\n      var newPin = pin;\n\n      if (key === \"back\") {\n        newPin = pin.substring(0, pin.length - 1);\n      } else {\n        if (pin.length < numberOfPins) {\n          newPin = pin.concat(key);\n        }\n      }\n\n      if (this.props.keyVibration) {\n        Vibration.vibrate(50);\n      }\n\n      if (newPin.length <= numberOfPins) {\n        if (keyDown) keyDown(newPin);\n      }\n    }\n  }, {\n    key: \"throwError\",\n    value: function throwError(error) {\n      this.pins.shake();\n      this.keyboard.throwError(error);\n      this.keyboard.disable();\n    }\n  }, {\n    key: \"clearError\",\n    value: function clearError() {\n      this.keyboard.clearError();\n    }\n  }, {\n    key: \"shakeAnimationComplete\",\n    value: function shakeAnimationComplete() {\n      if (this.props.onError) this.props.onError();\n      this.keyboard.enable();\n    }\n  }]);\n\n  return PinScreen;\n}(Component);\n\nPinScreen.propTypes = {\n  pin: PropTypes.string,\n  onRef: PropTypes.any.isRequired,\n  keyDown: PropTypes.func.isRequired,\n  onError: PropTypes.func,\n  tagline: PropTypes.string,\n  logo: PropTypes.any,\n  numberOfPins: PropTypes.number,\n  keyVibration: PropTypes.bool,\n  shakeVibration: PropTypes.bool,\n  logoEnabled: PropTypes.bool,\n  headerBackgroundColor: PropTypes.string,\n  footerBackgroundColor: PropTypes.string,\n  ItemFooter: PropTypes.element,\n  containerStyle: PropTypes.object,\n  logoStyle: PropTypes.object,\n  taglineStyle: PropTypes.object,\n  pinContainerStyle: PropTypes.object,\n  pinStyle: PropTypes.object,\n  pinActiveStyle: PropTypes.object,\n  keyboardStyle: PropTypes.object,\n  keyboardDisabledStyle: PropTypes.object,\n  keyStyle: PropTypes.object,\n  keyTextStyle: PropTypes.object,\n  keyImageStyle: PropTypes.object,\n  errorStyle: PropTypes.object,\n  errorTextStyle: PropTypes.object\n};\nPinScreen.defaultProps = {\n  tagline: \"Enter your PIN\",\n  numberOfPins: 5,\n  keyVibration: true,\n  shakeVibration: true,\n  logoEnabled: false,\n  headerBackgroundColor: \"#e2e2e2\",\n  footerBackgroundColor: \"#fff\"\n};\nexport default PinScreen;\nvar styles = StyleSheet.create({\n  containerDefaultStyle: {\n    flex: 1,\n    width: \"100%\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    backgroundColor: \"#e2e2e2\"\n  },\n  safeAreaViewHeaderDefaultStyle: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"100%\",\n    marginTop: 20\n  },\n  safeAreaViewFooterDefaultStyle: {\n    flex: null,\n    width: \"100%\"\n  },\n  defaultTaglineStyle: {\n    flex: null,\n    color: \"#FFF\",\n    fontSize: 17,\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"sources":["D:/PROJECTS/Aadhar-Hackathon-Anumati/Anumati-client/node_modules/react-native-awesome-pin/PinScreen.js"],"names":["React","Component","PropTypes","PinInput","PinKeyboard","PinScreen","props","state","pin","onRef","undefined","prevProps","filteredPin","toString","setState","logo","tagline","numberOfPins","shakeVibration","logoEnabled","headerBackgroundColor","footerBackgroundColor","containerStyle","logoStyle","taglineStyle","pinContainerStyle","pinStyle","pinActiveStyle","keyboardStyle","keyboardDisabledStyle","keyStyle","keyTextStyle","keyImageStyle","errorStyle","errorTextStyle","containerDefaultStyle","styles","defaultTaglineStyle","safeAreaViewHeaderDefaultStyle","safeAreaViewFooterDefaultStyle","backgroundColor","flex","ref","pins","length","shakeAnimationComplete","bind","keyboard","keyDown","ItemFooter","key","newPin","substring","concat","keyVibration","Vibration","vibrate","error","shake","throwError","disable","clearError","onError","enable","propTypes","string","any","isRequired","func","number","bool","element","object","defaultProps","StyleSheet","create","width","justifyContent","alignItems","marginTop","color","fontSize","fontWeight"],"mappings":"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","sourcesContent":["/**\n * @author Luke Brandon Farrell\n * @description Customisable full screen pin component\n */\n\nimport React, { Component } from \"react\";\nimport {\n  View,\n  Image,\n  Text,\n  StyleSheet,\n  Vibration,\n  SafeAreaView\n} from \"react-native\";\nimport PropTypes from \"prop-types\";\n\nimport PinInput from \"./PinInput\";\nimport PinKeyboard from \"./PinKeyboard\";\n\nclass PinScreen extends Component {\n  /**\n   * [ Built-in React method. ]\n   *\n   * Setup the component. Executes when the component is created\n   *\n   * @param {object} props\n   *\n   */\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      pin: \"\"\n    };\n  }\n\n  /**\n   * [ Built-in React method. ]\n   *\n   * Executed when the component is mounted to the screen.\n   */\n  componentDidMount() {\n    this.props.onRef(this);\n  }\n\n  /**\n   * [ Built-in React method. ]\n   *\n   * Executed when the component is unmounted from the screen\n   */\n  componentWillUnmount() {\n    this.props.onRef(undefined);\n  }\n\n  /**\n   * [ Built-in React method. ]\n   *\n   * Allows us to render JSX to the screen\n   */\n  componentDidUpdate(prevProps) {\n    const { pin } = this.props;\n\n    if (pin !== prevProps.pin) {\n      // We want to filter the pin so it always is a string\n      const filteredPin = pin ? pin.toString() : \"\";\n\n      this.setState({\n        pin: filteredPin\n      });\n    }\n  }\n\n  /**\n   * [ Built-in React method. ]\n   *\n   * Allows us to render JSX to the screen\n   */\n  render() {\n    /** Props */\n    const {\n      logo,\n      tagline,\n      numberOfPins,\n      shakeVibration,\n      logoEnabled,\n      headerBackgroundColor,\n      footerBackgroundColor,\n      // Style Props\n      containerStyle,\n      logoStyle,\n      taglineStyle,\n      // Pin style props\n      pinContainerStyle,\n      pinStyle,\n      pinActiveStyle,\n      // Keyboard style props\n      keyboardStyle,\n      keyboardDisabledStyle,\n      keyStyle,\n      keyTextStyle,\n      keyImageStyle,\n      errorStyle,\n      errorTextStyle\n    } = this.props;\n    /** State */\n    const { pin } = this.state;\n    /** Style */\n    const {\n      containerDefaultStyle,\n      defaultTaglineStyle,\n      safeAreaViewHeaderDefaultStyle,\n      safeAreaViewFooterDefaultStyle\n    } = styles;\n\n    return (\n      <View style={[containerDefaultStyle, containerStyle]}>\n        <SafeAreaView\n          style={[\n            safeAreaViewHeaderDefaultStyle,\n            { backgroundColor: headerBackgroundColor }\n          ]}\n        >\n          {logoEnabled ?\n            <Image style={[{ flex: 2 }, logoStyle]} source={logo} /> : null }\n          <Text style={[defaultTaglineStyle, taglineStyle]}>{tagline}</Text>\n          <PinInput\n            onRef={ref => (this.pins = ref)}\n            numberOfPins={numberOfPins}\n            numberOfPinsActive={pin.length}\n            vibration={shakeVibration}\n            animationShakeCallback={this.shakeAnimationComplete.bind(this)}\n            containerStyle={pinContainerStyle}\n            pinStyle={pinStyle}\n            pinActiveStyle={pinActiveStyle}\n          />\n        </SafeAreaView>\n\n        <SafeAreaView\n          style={[\n            safeAreaViewFooterDefaultStyle,\n            { backgroundColor: footerBackgroundColor }\n          ]}\n        >\n          <PinKeyboard\n            onRef={ref => (this.keyboard = ref)}\n            keyDown={this.keyDown.bind(this)}\n            keyboardStyle={keyboardStyle}\n            keyboardDisabledStyle={keyboardDisabledStyle}\n            keyStyle={keyStyle}\n            keyTextStyle={keyTextStyle}\n            keyImageStyle={keyImageStyle}\n            errorStyle={errorStyle}\n            errorTextStyle={errorTextStyle}\n          />\n          {this.props.ItemFooter}\n        </SafeAreaView>\n      </View>\n    );\n  }\n\n  /**\n   * Callback triggered when a key is pressed on the keyboard\n   *\n   * @param key\n   */\n  keyDown(key) {\n    /** Props */\n    const { numberOfPins, keyDown } = this.props;\n    /** State */\n    const { pin } = this.state;\n\n    // An instance of the pin\n    let newPin = pin;\n\n    // Check if key is the back buttons. The 'back' value is\n    // defined in the array keyboardFunc passed to keyboard as\n    // a parameter.\n    if (key === \"back\") {\n      newPin = pin.substring(0, pin.length - 1);\n    } else {\n      // Concat the letter in the string\n      if (pin.length < numberOfPins) {\n        newPin = pin.concat(key);\n      }\n    }\n\n    // If vibration is enabled then we vibrate on each key press\n    // to provide tactile feedback to the user.\n    if (this.props.keyVibration) {\n      Vibration.vibrate(50);\n    }\n\n    // The pin has been changed, trigger the callback\n    // Don't allow the callback if the input exceeds the number of pins\n    if (newPin.length <= numberOfPins) {\n      if (keyDown) keyDown(newPin);\n    }\n  }\n\n  /**\n   * Function used to throw an error on the pin screen.\n   *\n   * @param error\n   */\n  throwError(error) {\n    // Shake the pins\n    this.pins.shake();\n\n    // throw error on the keyboard\n    this.keyboard.throwError(error);\n\n    // Disable the keyboard\n    this.keyboard.disable();\n  }\n\n  /**\n   * Function used to clear the error on the pin screen\n   */\n  clearError() {\n    this.keyboard.clearError();\n  }\n\n  /**\n   * Callback when shake animation has completed on the pin\n   */\n  shakeAnimationComplete() {\n    if (this.props.onError) this.props.onError();\n\n    this.keyboard.enable();\n  }\n}\n\nPinScreen.propTypes = {\n  pin: PropTypes.string,\n  onRef: PropTypes.any.isRequired,\n  keyDown: PropTypes.func.isRequired,\n  onError: PropTypes.func,\n  tagline: PropTypes.string,\n  logo: PropTypes.any,\n  numberOfPins: PropTypes.number,\n  keyVibration: PropTypes.bool,\n  shakeVibration: PropTypes.bool,\n  logoEnabled: PropTypes.bool,\n  headerBackgroundColor: PropTypes.string,\n  footerBackgroundColor: PropTypes.string,\n  ItemFooter: PropTypes.element,\n\n  // Style props\n  containerStyle: PropTypes.object,\n  logoStyle: PropTypes.object,\n  taglineStyle: PropTypes.object,\n\n  // Pin style props\n  pinContainerStyle: PropTypes.object,\n  pinStyle: PropTypes.object,\n  pinActiveStyle: PropTypes.object,\n\n  // Keyboard style props\n  keyboardStyle: PropTypes.object,\n  keyboardDisabledStyle: PropTypes.object,\n  keyStyle: PropTypes.object,\n  keyTextStyle: PropTypes.object,\n  keyImageStyle: PropTypes.object,\n  errorStyle: PropTypes.object,\n  errorTextStyle: PropTypes.object\n};\n\nPinScreen.defaultProps = {\n  // Text above the pins acting as a indicator\n  tagline: \"Enter your PIN\",\n  // Number of pins to create\n  numberOfPins: 5,\n  // Is vibration enabled or disabled\n  keyVibration: true,\n  shakeVibration: true,\n  logoEnabled: false,\n  headerBackgroundColor: \"#e2e2e2\",\n  footerBackgroundColor: \"#fff\"\n};\n\nexport default PinScreen;\n\n/** -------------------------------------------- */\n/**             Component Styling                */\n/** -------------------------------------------- */\nconst styles = StyleSheet.create({\n  containerDefaultStyle: {\n    flex: 1,\n    width: \"100%\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    backgroundColor: \"#e2e2e2\"\n  },\n  safeAreaViewHeaderDefaultStyle: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"100%\",\n    marginTop: 20,\n  },\n  safeAreaViewFooterDefaultStyle: {\n    flex: null,\n    width: \"100%\",\n  },\n  defaultTaglineStyle: {\n    flex: null,\n    color: \"#FFF\",\n    fontSize: 17,\n    fontWeight: \"bold\"\n  }\n});\n"]},"metadata":{},"sourceType":"module"}