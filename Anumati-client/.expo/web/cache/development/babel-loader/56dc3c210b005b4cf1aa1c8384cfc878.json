{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nvar initialStateLocalStorage = {\n  tokenFound: false\n};\n\nvar LocalStorageReducer = function LocalStorageReducer() {\n  var state,\n      action,\n      value,\n      _args = arguments;\n  return _regeneratorRuntime.async(function LocalStorageReducer$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          state = _args.length > 0 && _args[0] !== undefined ? _args[0] : initialStateLocalStorage;\n          action = _args.length > 1 ? _args[1] : undefined;\n          _context.t0 = action.type;\n          _context.next = _context.t0 === 'CHECK_USERTOKEN' ? 5 : 17;\n          break;\n\n        case 5:\n          _context.prev = 5;\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem('userToken'));\n\n        case 8:\n          value = _context.sent;\n\n          if (!(value !== null)) {\n            _context.next = 11;\n            break;\n          }\n\n          return _context.abrupt(\"return\", _objectSpread(_objectSpread({}, state), {}, {\n            tokenFound: true\n          }));\n\n        case 11:\n          _context.next = 16;\n          break;\n\n        case 13:\n          _context.prev = 13;\n          _context.t1 = _context[\"catch\"](5);\n          console.log(_context.t1);\n\n        case 16:\n          return _context.abrupt(\"return\", _objectSpread({}, state));\n\n        case 17:\n          return _context.abrupt(\"return\", _objectSpread({}, state));\n\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[5, 13]], Promise);\n};\n\nexport default LocalStorageReducer;","map":{"version":3,"sources":["D:/PROJECTS/Aadhar-Hackathon-Anumati/Anumati-client/src/Reducers/localStorageReducer.js"],"names":["AsyncStorage","initialStateLocalStorage","tokenFound","LocalStorageReducer","state","action","type","getItem","value","console","log"],"mappings":";;;;;;;AAAA,OAAOA,YAAP,MAAyB,2CAAzB;AACA,IAAMC,wBAAwB,GAAG;AAC7BC,EAAAA,UAAU,EAAE;AADiB,CAAjC;;AAIA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAOC,UAAAA,KAAP,2DAAeH,wBAAf;AAA0CI,UAAAA,MAA1C;AAAA,wBAChBA,MAAM,CAACC,IADS;AAAA,0CAEf,iBAFe;AAAA;;AAAA;AAAA;AAAA;AAAA,2CAIQN,YAAY,CAACO,OAAb,CAAqB,WAArB,CAJR;;AAAA;AAINC,UAAAA,KAJM;;AAAA,gBAKTA,KAAK,KAAK,IALD;AAAA;AAAA;AAAA;;AAAA,2EAODJ,KAPC;AAQJF,YAAAA,UAAU,EAAE;AARR;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAYZO,UAAAA,OAAO,CAACC,GAAR;;AAZY;AAAA,6DAcJN,KAdI;;AAAA;AAAA,6DAiBTA,KAjBS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B;;AAqBA,eAAeD,mBAAf","sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\r\nconst initialStateLocalStorage = {\r\n    tokenFound: false,\r\n}\r\n\r\nconst LocalStorageReducer = async (state = initialStateLocalStorage , action) => {\r\n    switch( action.type ) {\r\n        case 'CHECK_USERTOKEN' : \r\n            try {\r\n                const value = await AsyncStorage.getItem('userToken');\r\n                if(value !== null) {\r\n                    return {\r\n                        ...state,\r\n                        tokenFound: true\r\n                    }\r\n                } \r\n            } catch(err) {\r\n                console.log(err);\r\n            }\r\n            return { ...state }\r\n        default: \r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n};\r\nexport default LocalStorageReducer;"]},"metadata":{},"sourceType":"module"}