require('dotenv').config();

const Consent = require('../models').Consent;
const Token = require('../models').Token;
const token = require('../Controller/token_control');
const Log = require('../models').Log;
const { Op } = require("sequelize");
const multer = require('multer');
const multerS3 = require('multer-s3');
const aws = require('aws-sdk');
const fast2sms = require('fast-two-sms');

aws.config.update({
    accessKeyId : process.env.ACCESS_KEY ,
    secretAccessKey : process.env.SECRET_ACCESS_KEY
});

const s3 = new aws.S3({
    params: { Bucket: 'ait-placements'},
    region: 'us-east-1',
})


exports.createConsent = async function(req,res){
    try{
        const data = {
            RequesterAadhar: req.body.RequesterAadhar,
            ApproverAadhar: req.body.ApproverAadhar,
            Status: req.body.Status,
            attachment: req.body.attachment,
            RequesterName:req.body.RequesterName
        }

        const new_consent = await Consent.create(data);
        console.log("Inserted Data is",new_consent);

        if(new_consent == null)
            res.send({error:'Server Error.Try Again'});
        else
        {
            console.log("Successful Insertion");
            const log_data = {
                ConsentID : new_consent.ConsentID,
                Action : 'Consent Request Generated by User. Pending from approver'
            }

            const log_response = await Log.create(log_data);
            console.log("Log response",log_response);

            res.send({ID:new_consent.ConsentID,message:'Consent Generated Successfully'});
        }    

    }catch(err){
        console.log("Error while creating consent",err);
        res.send({ error : 'Server Error.Try Again'});
    }
}

exports.updateConsent = async function(req,res){
    try{
        const data = {
            Status:req.body.Status
        }

        const result = await Consent.update(data,{
            where : {
                'ConsentID' : req.body.ConsentID
            }
        });

        if(result == null)
            res.send({error:'Server Error.Try Again'});
        else
        {
            const new_data = await Consent.findOne({where:{
                'ConsentID' : req.body.ConsentID
            }})
            
            let new_action;
            
            if(req.body.Status == 'Approved'){
                new_action = 'Consent Approved by approver';
            }else if(req.body.Status == 'Rejected'){
                new_action = 'Consent Rejected by approver';
            }else if(req.body.Status == 'Reviewed'){    
                new_action = 'Approved Address Reviewed by User';
            }else if(req.body.Status == 'Cancelled'){
                new_action = 'Consent Cancelled by Requester';
            }else if(req.body.Status == 'Finish')
                new_action = 'Process Complete';
            
            const log_data = {
                ConsentID : req.body.ConsentID,
                Action : new_action
            }

            await Log.create(log_data);
            
            res.send({message:'Status Updated successfully',RequesterAadhar:new_data.RequesterAadhar,ApproverAadhar:new_data.ApproverAadhar});
        }    
    }catch(err){
        console.log("Error while updating consent",err);
        res.send({ error : 'Server Error.Try Again'});
    }
}

exports.getConsentDetails = async function(req,res){
    try{
        const data = await Consent.findAll({where:{
            'RequesterAadhar' : req.body.aadhar
        }})

        res.send({message:'Consent Extracted Successfully',data:data});
    }catch(err){
        console.log("Error while retreiving consent details",err);
        res.send({ error : 'Server Error.Try Again'});
    }
}

exports.getConsenttobeApproved = async function(req,res){
    try{
        const data = await Consent.findAll({where:{
            'ApproverAadhar' : req.body.aadhar
        }})

        res.send({message:'Consent Extracted Successfully',data:data});
    }catch(err){
        console.log("Error while retreiving consent details",err);
        res.send({ error : 'Server Error.Try Again'});
    }
}

exports.getLogbyId = async function(req,res){
    try{
        const data = await Log.findAll({where:{
            'ConsentID' : req.body.ConsentID
        }})

        res.send({message:'Logs Extracted Successfully',data:data});
    }catch(err){
        console.log("Error while retreiving consent details",err);
        res.send({ error : 'Server Error.Try Again'});
    }
}

exports.getConsentbyId = async function(req,res){
    try{
        const data = await Consent.findOne({where:{
            'ConsentID' : req.body.ConsentID
        }})

        res.send({message:'Consent Extracted Successfully',data:data});
    }catch(err){
        console.log("Error while retreiving consent details",err);
        res.send({ error : 'Server Error.Try Again'});
    }
}

exports.sendSMS = async function(req,res){
    try{
        var options = {authorization : process.env.API_KEY , message : req.body.Message ,  numbers : [req.body.Mobile]} 
        
        const response  = await fast2sms.sendMessage(options) 
        
        console.log(response);
        
        res.send({message:'SMS send Successfully'});
    }catch(err){
        console.log("Error while sending SMS",err);
        res.send({ error : 'Server Error.Try Again'});
    }
}

exports.upload = multer({

    storage: multerS3({
        s3: s3,
        bucket: 'ait-placements',
        key: async function (req, file, cb) {
            
            let x = await authenticate(req);
            
            if(!x)
                return res.status(401).send('unauthorized');
    
            try{
                //console.log(file);
                cb(null, (Date.now()).toString() + file.originalname) ;
            }catch(err){
                // console.log(err);
            }     
        }
    })
});
